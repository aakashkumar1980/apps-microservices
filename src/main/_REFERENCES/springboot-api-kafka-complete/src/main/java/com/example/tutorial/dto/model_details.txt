Hereâ€™s the list of all classes and their properties in a clean, readable format:

---

### **Customer**

* customerId
* name
* email
* phoneNumber
* preferredChannel
* enrolledOfferIds

---

### **CustomerPreference**

* customerId
* categories
* preferredRewardType
* engagementScore

---

### **TargetedCustomer**

* customerId
* offerId
* targetingScore
* eligibilityStatus

---

### **OfferEnrollment**

* enrollmentId
* customerId
* offerId
* enrolledAt

---

### **OfferImpression**

* impressionId
* customerId
* offerId
* timestamp
* adPlatform

---

### **Merchant**

* merchantId
* name
* category
* location
* activeOffers
* performanceScore

---

### **MerchantPerformance**

* merchantId
* totalTransactions
* totalRedemptions
* avgTransactionValue

---

### **Offer**

* offerId
* campaignId
* merchantId
* rewardType
* rewardValue
* eligibilityCriteria
* offerStatus
* createdAt

---

### **Redemption**

* redemptionId
* customerId
* offerId
* transactionId
* amountSpent
* rewardApplied
* timestamp

---

### **Reward**

* rewardId
* redemptionId
* customerId
* rewardType
* rewardValue
* rewardStatus
* processedAt

---

### **Transaction**

* transactionId
* customerId
* merchantId
* amount
* transactionDate
* paymentMethod

---

### **Campaign**

* campaignId
* campaignName
* campaignStatus
* description
* budget
* startDate
* endDate
* createdBy
* createdAt
* offerIds

---

### Microservices affected when a Campaign or Offer is created (Event-Driven Architecture)

#### When a **Campaign** is created:

**1. Campaign Service**
- Stores and manages campaign details.

**2. Offer Service**
- (Not directly affected at campaign creation.)
- Will be involved when offers are created and linked to this campaign.

**3. Targeting/TargetedCustomer Service**
- Identifies and targets eligible customers for the new campaign.
- Updates targeting rules and customer lists.

**4. Notification/CustomerPreference Service**
- Notifies customers about new campaign (once offers are available).
- Updates customer preferences based on new campaign data.

**5. Merchant Service**
- Associates merchants with new campaign offers (when offers are created).
- Updates merchant dashboards and analytics.

---

#### When an **Offer** is created:

**1. Offer Service**
- Stores and manages offer details.

**2. Campaign Service**
- Updates campaign with new offer associations.

**3. Targeting/TargetedCustomer Service**
- Identifies eligible customers for the new offer.
- Updates targeting and eligibility data.

**4. Notification/CustomerPreference Service**
- Notifies customers about new offers.
- Updates customer preferences and engagement scores.

**5. Merchant Service**
- Associates merchants with new offers.
- Updates merchant offer lists and analytics.

---

### Service Independence and Dependencies

**Independent Services:**
- **Campaign Service**
  Campaigns can be created independently. Other entities reference campaigns via `campaignId`.

- **Merchant Service**
  Merchants can be created independently. Other entities reference merchants via `merchantId`.

**Dependent Services:**
- **Offer Service**
  Offers depend on the existence of a Campaign (`campaignId`) and a Merchant (`merchantId`). An offer cannot be created without a valid campaign.

- **TargetedCustomer, OfferEnrollment, OfferImpression, Redemption, Reward, Transaction Services**
  These depend on the existence of Customer, Offer, and/or Merchant.

**Summary:**
Campaign and Merchant must exist before Offers can be created, as Offer references both via foreign keys.

---

### DTOs to be created for Independent Services

**1. CampaignDTO**
- Represents the Campaign entity for data transfer.

**2. MerchantDTO**
- Represents the Merchant entity for data transfer.

---

Let me know if you'd like me to generate Java class files from this or apply validation annotations.
